# 1. Import necessary libraries
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import confusion_matrix, classification_report, accuracy_score

# 2. Load the Iris dataset
iris = load_iris()
X = iris.data
y = iris.target

# 3. Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)

# 4. Build the KNN model
clf = KNeighborsClassifier(n_neighbors=3)  # you can change n_neighbors to any value you prefer
clf.fit(X_train, y_train)

# 5. Predict the test results
y_pred = clf.predict(X_test)

# 6. Calculate the confusion matrix and classification report
cm = confusion_matrix(y_test, y_pred)
print('Confusion matrix is as follows:\n', cm)
print('Accuracy Metrics:')
print(classification_report(y_test, y_pred))
print("Correct predictions:", accuracy_score(y_test, y_pred))
print("Wrong predictions:", (1 - accuracy_score(y_test, y_pred)))

# 7. Calculate the prediction with the labels of the test data
print("Predicted Data:")
print(y_pred)
print("Test data:")
print(y_test)

# 8. Identify the misclassifications
diff = y_pred - y_test
print("Result is:")
print(diff)
print('Total number of samples misclassified =', sum(abs(diff)))
